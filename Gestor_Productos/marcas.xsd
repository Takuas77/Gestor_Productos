<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="marcas" targetNamespace="http://tempuri.org/marcas.xsd" xmlns:mstns="http://tempuri.org/marcas.xsd" xmlns="http://tempuri.org/marcas.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="inventariodbConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="inventariodbConnectionString (MySettings)" PropertyReference="ApplicationSettings.Gestor_Productos.My.MySettings.GlobalReference.Default.inventariodbConnectionString" Provider="Devart.Data.MySql" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="marcaTableAdapter" GeneratorDataComponentClassName="marcaTableAdapter" Name="marca" UserDataComponentName="marcaTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="inventariodbConnectionString (MySettings)" DbObjectName="inventariodb.marca" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `inventariodb`.`marca` WHERE ((`IdMarca` = :Original_IdMarca) AND ((:IsNull_Marca = 1 AND `Marca` IS NULL) OR (`Marca` = :Original_Marca)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_IdMarca" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdMarca" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_Marca" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Marca" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_Marca" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Marca" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `inventariodb`.`marca` (`Marca`) VALUES (:Marca)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Marca" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Marca" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IdMarca, Marca FROM inventariodb.marca</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `inventariodb`.`marca` SET `Marca` = :Marca WHERE ((`IdMarca` = :Original_IdMarca) AND ((:IsNull_Marca = 1 AND `Marca` IS NULL) OR (`Marca` = :Original_Marca)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Marca" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Marca" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_IdMarca" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdMarca" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_Marca" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Marca" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_Marca" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Marca" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IdMarca" DataSetColumn="IdMarca" />
              <Mapping SourceColumn="Marca" DataSetColumn="Marca" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="marcas" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="marcas" msprop:Generator_DataSetName="marcas">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="marca" msprop:Generator_RowEvHandlerName="marcaRowChangeEventHandler" msprop:Generator_RowDeletedName="marcaRowDeleted" msprop:Generator_RowDeletingName="marcaRowDeleting" msprop:Generator_RowEvArgName="marcaRowChangeEvent" msprop:Generator_TablePropName="marca" msprop:Generator_RowChangedName="marcaRowChanged" msprop:Generator_RowChangingName="marcaRowChanging" msprop:Generator_TableClassName="marcaDataTable" msprop:Generator_RowClassName="marcaRow" msprop:Generator_TableVarName="tablemarca" msprop:Generator_UserTableName="marca">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IdMarca" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="IdMarca" msprop:Generator_ColumnPropNameInTable="IdMarcaColumn" msprop:Generator_ColumnVarNameInTable="columnIdMarca" msprop:Generator_UserColumnName="IdMarca" type="xs:int" />
              <xs:element name="Marca" msprop:Generator_ColumnPropNameInRow="Marca" msprop:Generator_ColumnPropNameInTable="MarcaColumn" msprop:Generator_ColumnVarNameInTable="columnMarca" msprop:Generator_UserColumnName="Marca" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:marca" />
      <xs:field xpath="mstns:IdMarca" />
    </xs:unique>
  </xs:element>
</xs:schema>